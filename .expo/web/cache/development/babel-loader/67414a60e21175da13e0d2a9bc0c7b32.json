{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/var/projets/Project-TocToc-Imo/App-test1/compoments/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Layouts from \"../utils/Layouts\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Tosale from \"./Tosale\";\nimport Home from \"./Home\";\nimport Search from \"./Search\";\nimport Chathome from \"./Chathome\";\nimport Profile from \"./Profile\";\nimport Language from \"../utils/Languages\";\nvar AppTabs = createBottomTabNavigator();\nvar WORDS = Language('fr');\n\nvar Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    _classCallCheck(this, Main);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(AppTabs.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: {\n          headerShown: false,\n          tabBarStyle: {\n            backgroundColor: '#000',\n            height: Layouts.settingsTabNav.AppTabsNavigatorHeight,\n            position: 'absolute',\n            elevation: 0\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(AppTabs.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          title: '',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var focused = _ref.focused;\n            return React.createElement(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center',\n                top: Layouts.settingsTabNav.AppTabsScreenTop\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 45\n              }\n            }, React.createElement(Image, {\n              source: require(\"../assets/home.png\"),\n              resizeMode: \"contain\",\n              style: {\n                width: Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                height: Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                tintColor: focused ? '#fff' : '#C8C8CE'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 49\n              }\n            }), React.createElement(Text, {\n              style: {\n                color: focused ? '#fff' : '#C8C8CE',\n                fontSize: Layouts.settingsTabNav.AppTabsScreenTextSize\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 49\n              }\n            }, WORDS.accueil));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }), React.createElement(AppTabs.Screen, {\n        name: \"Search\",\n        component: Search,\n        options: {\n          title: '',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            return React.createElement(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center',\n                top: Layouts.settingsTabNav.AppTabsScreenTop\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 45\n              }\n            }, React.createElement(Image, {\n              source: require(\"../assets/discover.png\"),\n              resizeMode: \"contain\",\n              style: {\n                width: Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                height: Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                tintColor: focused ? '#fff' : '#C8C8CE'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 49\n              }\n            }), React.createElement(Text, {\n              style: {\n                color: focused ? '#fff' : '#C8C8CE',\n                fontSize: Layouts.settingsTabNav.AppTabsScreenTextSize\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 49\n              }\n            }, WORDS.recherche));\n          }\n        },\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(e) {\n              e.preventDefault();\n              navigation.navigate('SearchModal');\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), React.createElement(AppTabs.Screen, {\n        name: \"Tosale\",\n        component: Tosale,\n        options: {\n          title: '',\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused;\n            return React.createElement(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center',\n                top: Layouts.settingsTabNav.AppTabsScreenTosaleTop,\n                borderRadius: Layouts.settingsTabNav.AppTabsScreenTosaleBorderRadius,\n                width: Layouts.settingsTabNav.AppTabsScreenTosaleWidth,\n                height: Layouts.settingsTabNav.AppTabsScreenTosaleHeight,\n                backgroundColor: '#de4b4b'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 45\n              }\n            }, React.createElement(Ionicons, {\n              name: \"camera\",\n              size: Layouts.settingsTabNav.AppTabsScreenTosaleIconSize,\n              color: \"#fff\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 49\n              }\n            }));\n          }\n        },\n        listeners: function listeners(_ref5) {\n          var navigation = _ref5.navigation;\n          return {\n            tabPress: function tabPress(e) {\n              e.preventDefault();\n              navigation.navigate('TosaleModal');\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }), React.createElement(AppTabs.Screen, {\n        name: \"Chathome\",\n        component: Chathome,\n        options: {\n          title: '',\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var focused = _ref6.focused;\n            return React.createElement(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center',\n                top: Layouts.settingsTabNav.AppTabsScreenTop\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 45\n              }\n            }, React.createElement(Image, {\n              source: require(\"../assets/message.png\"),\n              resizeMode: \"contain\",\n              style: {\n                width: Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                height: Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                tintColor: focused ? '#fff' : '#C8C8CE'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 49\n              }\n            }), React.createElement(Text, {\n              style: {\n                color: focused ? '#fff' : '#C8C8CE',\n                fontSize: Layouts.settingsTabNav.AppTabsScreenTextSize\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 49\n              }\n            }, WORDS.message));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }), React.createElement(AppTabs.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: {\n          title: '',\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var focused = _ref7.focused;\n            return React.createElement(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center',\n                top: Layouts.settingsTabNav.AppTabsScreenTop\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 45\n              }\n            }, React.createElement(Image, {\n              source: require(\"../assets/profile.png\"),\n              resizeMode: \"contain\",\n              style: {\n                width: Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                height: Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                tintColor: focused ? '#fff' : '#C8C8CE'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 49\n              }\n            }), React.createElement(Text, {\n              style: {\n                color: focused ? '#fff' : '#C8C8CE',\n                fontSize: Layouts.settingsTabNav.AppTabsScreenTextSize\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 49\n              }\n            }, WORDS.profil));\n          }\n        },\n        listeners: function listeners(_ref8) {\n          var navigation = _ref8.navigation;\n          return {\n            tabPress: function tabPress(e) {\n              e.preventDefault();\n              navigation.navigate('ProfileModal');\n            }\n          };\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport { Main as default };\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/var/projets/Project-TocToc-Imo/App-test1/compoments/Main.js"],"names":["React","Component","createBottomTabNavigator","Layouts","Ionicons","Tosale","Home","Search","Chathome","Profile","Language","AppTabs","WORDS","Main","props","headerShown","tabBarStyle","backgroundColor","height","settingsTabNav","AppTabsNavigatorHeight","position","elevation","title","tabBarIcon","focused","alignItems","justifyContent","top","AppTabsScreenTop","require","width","AppTabsScreenImageWidth","AppTabsScreenImageHeight","tintColor","color","fontSize","AppTabsScreenTextSize","accueil","recherche","navigation","tabPress","e","preventDefault","navigate","AppTabsScreenTosaleTop","borderRadius","AppTabsScreenTosaleBorderRadius","AppTabsScreenTosaleWidth","AppTabsScreenTosaleHeight","AppTabsScreenTosaleIconSize","message","profil","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Image, Text, View, TouchableOpacity } from 'react-native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Layouts from '../utils/Layouts';\nimport { Ionicons } from '@expo/vector-icons';\n//\nimport Tosale from './Tosale';\nimport Home from './Home';\nimport Search from './Search';\nimport Chathome from './Chathome';\nimport Profile from './Profile';\n//\nimport Language from '../utils/Languages';\n\n\nconst AppTabs = createBottomTabNavigator();\nconst WORDS = Language('fr');\n\nexport default class Main extends Component {\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n                <AppTabs.Navigator\n                    initialRouteName='Home'\n                    \n                     screenOptions={{\n                        headerShown: false,\n                        tabBarStyle: { \n                                        backgroundColor:'#000',\n                                        height:Layouts.settingsTabNav.AppTabsNavigatorHeight,\n                                        position: 'absolute',\n                                        elevation:0,\n                                     },\n                    }}\n                >\n                    <AppTabs.Screen name=\"Home\" \n                                    component={Home} \n                                    options={{\n                                        title:'',\n                                        tabBarIcon: ({focused}) => (\n                                            <View style={{  alignItems:'center', \n                                                            justifyContent:'center',\n                                                            top:Layouts.settingsTabNav.AppTabsScreenTop\n                                                        }}>\n                                                <Image source={require('../assets/home.png')} \n                                                       resizeMode='contain'\n                                                       style={{\n                                                           width:Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                                                           height:Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                                                           tintColor: focused ? '#fff':'#C8C8CE'\n                                                       }} />\n                                                <Text style={{\n                                                    color: focused ? '#fff':'#C8C8CE',\n                                                    fontSize:Layouts.settingsTabNav.AppTabsScreenTextSize\n                                                }}>{WORDS.accueil}</Text>    \n                                            </View>\n                                        ),\n                                    }}\n                                    \n                                    \n                                    \n                    />\n                    <AppTabs.Screen name=\"Search\" \n                                    component={Search} \n                                    options={{\n                                        title:'',\n                                        tabBarIcon: ({focused}) => (\n                                            <View style={{  alignItems:'center', \n                                                            justifyContent:'center',\n                                                            top:Layouts.settingsTabNav.AppTabsScreenTop\n                                                        }}>\n                                                <Image source={require('../assets/discover.png')} \n                                                       resizeMode='contain'\n                                                       style={{\n                                                           width:Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                                                           height:Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                                                           tintColor: focused ? '#fff':'#C8C8CE'\n                                                       }} />\n                                                <Text style={{\n                                                    color: focused ? '#fff':'#C8C8CE',\n                                                    fontSize:Layouts.settingsTabNav.AppTabsScreenTextSize\n                                                }}>{WORDS.recherche}</Text>       \n                                            </View>\n                                        ),\n                                    }}\n                                    listeners={({navigation}) => ({\n                                        tabPress: (e) => {\n                                          // Prevent default action\n                                          e.preventDefault();\n                                    \n                                          // Do something with the `navigation` object\n                                          navigation.navigate('SearchModal');\n                                          //console.log(props);\n                                        },\n                                      })}\n                    />\n                    <AppTabs.Screen name=\"Tosale\" \n                                    component={Tosale} \n                                    options={{\n                                        title: '',\n                                        tabBarIcon: ({focused}) => (\n                                            <View style={{  alignItems:'center', \n                                                            justifyContent:'center',\n                                                            top:Layouts.settingsTabNav.AppTabsScreenTosaleTop,\n                                                            borderRadius:Layouts.settingsTabNav.AppTabsScreenTosaleBorderRadius,\n                                                            width:Layouts.settingsTabNav.AppTabsScreenTosaleWidth,\n                                                            height:Layouts.settingsTabNav.AppTabsScreenTosaleHeight,\n                                                            backgroundColor:'#de4b4b'\n\n                                                        }}>\n                                                <Ionicons name='camera' size={Layouts.settingsTabNav.AppTabsScreenTosaleIconSize} color='#fff'/>\n                                            </View>\n                                            \n                                           \n                                        ),\n                                    }}\n                                    listeners={({navigation}) => ({\n                                        tabPress: (e) => {\n                                          // Prevent default action\n                                          e.preventDefault();\n                                    \n                                          // Do something with the `navigation` object\n                                          navigation.navigate('TosaleModal');\n                                          //console.log(props);\n                                        },\n                                      })}\n                    \n                    />\n                    <AppTabs.Screen name=\"Chathome\" \n                                    component={Chathome} \n                                    options={{\n                                        title:'',\n                                        tabBarIcon: ({focused}) => (\n                                            <View style={{  alignItems:'center', \n                                                            justifyContent:'center',\n                                                            top:Layouts.settingsTabNav.AppTabsScreenTop\n                                                        }}>\n                                                <Image source={require('../assets/message.png')} \n                                                       resizeMode='contain'\n                                                       style={{\n                                                           width:Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                                                           height:Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                                                           tintColor: focused ? '#fff':'#C8C8CE'\n                                                       }} />\n                                                <Text style={{\n                                                    color: focused ? '#fff':'#C8C8CE',\n                                                    fontSize:Layouts.settingsTabNav.AppTabsScreenTextSize\n                                                }}>{WORDS.message}</Text>       \n                                            </View>\n                                        ),\n                                    }}\n\n                    />\n                    <AppTabs.Screen name=\"Profile\" \n                                    component={Profile} \n                                    options={{\n                                        title:'',\n                                        tabBarIcon: ({focused}) => (\n                                            <View style={{  alignItems:'center', \n                                                            justifyContent:'center',\n                                                            top:Layouts.settingsTabNav.AppTabsScreenTop\n                                                        }}>\n                                                <Image source={require('../assets/profile.png')} \n                                                       resizeMode='contain'\n                                                       style={{\n                                                           width:Layouts.settingsTabNav.AppTabsScreenImageWidth,\n                                                           height:Layouts.settingsTabNav.AppTabsScreenImageHeight,\n                                                           tintColor: focused ? '#fff':'#C8C8CE'\n                                                       }} />\n                                                <Text style={{\n                                                    color: focused ? '#fff':'#C8C8CE',\n                                                    fontSize:Layouts.settingsTabNav.AppTabsScreenTextSize\n                                                }}>{WORDS.profil}</Text>       \n                                            </View>\n                                        ),\n                                    }}\n                                    listeners={({navigation}) => ({\n                                        tabPress: (e) => {\n                                          // Prevent default action\n                                          e.preventDefault();\n                                    \n                                          // Do something with the `navigation` object\n                                          navigation.navigate('ProfileModal');\n                                          //console.log(props);\n                                        },\n                                      })}\n                    />\n                </AppTabs.Navigator>\n        )\n    }\n}\n\n\n\n\nconst styles = StyleSheet.create({})\n"]},"metadata":{},"sourceType":"module"}