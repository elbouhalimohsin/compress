{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/var/projets/Project-TocToc-Imo/App-test1/compoments/Tosale.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nvar Stack = createNativeStackNavigator();\nexport default function Tosale() {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"TosaleCompoment\",\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"TosaleCompoment\",\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }));\n}\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Camera } from 'expo-camera';\nimport Layouts from \"../utils/Layouts\";\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from \"expo-sharing\";\nimport axios from 'axios';\nimport * as Crypto from 'expo-crypto';\n\nfunction App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasAudioPermission = _useState2[0],\n      setHasAudioPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasCameraPermission = _useState4[0],\n      setHasCameraPermission = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      camera = _useState6[0],\n      setCamera = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      record = _useState8[0],\n      setRecord = _useState8[1];\n\n  var _useState9 = useState(Camera.Constants.Type.back),\n      _useState10 = _slicedToArray(_useState9, 2),\n      type = _useState10[0],\n      setType = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var cameraStatus, audioStatus;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestPermissionsAsync());\n\n            case 2:\n              cameraStatus = _context.sent;\n              setHasCameraPermission(cameraStatus.status === 'granted');\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(Camera.requestMicrophonePermissionsAsync());\n\n            case 6:\n              audioStatus = _context.sent;\n              setHasAudioPermission(audioStatus.status === 'granted');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var stopVideo = function stopVideo() {\n    return _regeneratorRuntime.async(function stopVideo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            camera.stopRecording();\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadVideo2 = function uploadVideo2(uriFile) {\n    var dataToLoad;\n    return _regeneratorRuntime.async(function uploadVideo2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dataToLoad = new FormData();\n            dataToLoad.append(\"action\", 'newInsert');\n            dataToLoad.append(\"video\", {\n              type: 'vido/mp4',\n              uri: uriFile,\n              name: 'video'\n            });\n            fetch(\"https://megapro.out-app-crm.com/reactnative/data/put/\", {\n              method: 'post',\n              body: dataToLoad\n            }).then(function (response) {\n              return response.json();\n            }).then(function (response) {\n              if (response.status) {\n                setLoading(true);\n                alert(':) ' + response.message);\n              } else {\n                setLoading(true);\n                alert('Err ' + response.message);\n              }\n            }).catch(function () {\n              alert(\"Err Networking\");\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadVideo = function uploadVideo(uriFile, data) {\n    var dataToLoad, config;\n    return _regeneratorRuntime.async(function uploadVideo$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dataToLoad = new FormData();\n            dataToLoad.append(\"data\", 'data');\n            dataToLoad.append(\"video\", {\n              type: 'vido/mp4',\n              uri: uriFile,\n              name: 'video.mp4'\n            });\n            config = {\n              onUploadProgress: function onUploadProgress(progressEvent) {\n                var percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n                console.log(percentCompleted, \"%\", progressEvent.total / 1000000);\n              }\n            };\n            axios.post(\"https://megapro.out-app-crm.com/test.php\", dataToLoad, config).then(function (res) {\n              console.log(res);\n              alert(\"OK\");\n            }).catch(function (err) {\n              console.log(err);\n            });\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeVideo = function takeVideo() {\n    var data;\n    return _regeneratorRuntime.async(function takeVideo$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.t0 = console;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(camera.getSupportedRatiosAsync());\n\n          case 3:\n            _context5.t1 = _context5.sent;\n\n            _context5.t0.log.call(_context5.t0, _context5.t1);\n\n            _context5.t2 = console;\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(Camera.Constants.VideoQuality['4:3']);\n\n          case 8:\n            _context5.t3 = _context5.sent;\n\n            _context5.t2.log.call(_context5.t2, _context5.t3);\n\n            if (!camera) {\n              _context5.next = 18;\n              break;\n            }\n\n            _context5.next = 13;\n            return _regeneratorRuntime.awrap(camera.recordAsync({\n              quality: Camera.Constants.VideoQuality['16:9'],\n              videoBitrate: 1.1 * 1000 * 1000,\n              maxDuration: 120,\n              maxFileSize: 20 * 1000 * 1000,\n              mute: false\n            }));\n\n          case 13:\n            data = _context5.sent;\n            setRecord(data.uri);\n            console.log(data.uri);\n            uploadVideo(data.uri, null);\n            return _context5.abrupt(\"return\");\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!hasAudioPermission || !hasCameraPermission) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!hasAudioPermission || !hasCameraPermission) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  var aa = function aa() {\n    return _regeneratorRuntime.async(function aa$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _regeneratorRuntime.awrap(camera.getAvailableVideoCodecsAsync());\n\n          case 2:\n            return _context6.abrupt(\"return\", _context6.sent);\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(Camera, {\n    style: {\n      flex: 1\n    },\n    ref: function ref(_ref) {\n      return setCamera(_ref);\n    },\n    type: type,\n    ratio: '16:9',\n    zoom: 0,\n    quality: Camera.Constants.VideoQuality['4:3'],\n    useCamera2Api: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      marginBottom: 10,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }\n  }, \" Flip \")), React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  }, React.createElement(Button, {\n    title: \"Take video\",\n    onPress: function onPress() {\n      takeVideo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 19\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      alignSelf: 'flex-end',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, React.createElement(Button, {\n    title: \"Stop Video\",\n    onPress: function onPress() {\n      return stopVideo();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  })))));\n}","map":{"version":3,"sources":["/var/projets/Project-TocToc-Imo/App-test1/compoments/Tosale.js"],"names":["createNativeStackNavigator","Stack","Tosale","headerShown","App","React","useState","useEffect","Camera","Layouts","FileSystem","Sharing","axios","Crypto","hasAudioPermission","setHasAudioPermission","hasCameraPermission","setHasCameraPermission","camera","setCamera","record","setRecord","Constants","Type","back","type","setType","loading","setLoading","requestPermissionsAsync","cameraStatus","status","requestMicrophonePermissionsAsync","audioStatus","stopVideo","stopRecording","uploadVideo2","uriFile","dataToLoad","FormData","append","uri","name","fetch","method","body","then","response","json","alert","message","catch","uploadVideo","data","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","console","log","post","res","err","takeVideo","getSupportedRatiosAsync","VideoQuality","recordAsync","quality","videoBitrate","maxDuration","maxFileSize","mute","aa","getAvailableVideoCodecsAsync","flex","margin","ref","backgroundColor","flexDirection","alignSelf","alignItems","front","fontSize","marginBottom","color"],"mappings":"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","sourcesContent":["import { createNativeStackNavigator } from '@react-navigation/native-stack';\n \nconst Stack = createNativeStackNavigator();\n\n export default function Tosale() {\n   return (\n       <Stack.Navigator initialRouteName='TosaleCompoment' screenOptions={{headerShown: false}}>\n         <Stack.Screen name=\"TosaleCompoment\" component={App} />\n       </Stack.Navigator>\n\n   );\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity, SafeAreaView,Button } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport Layouts from '../utils/Layouts';\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from \"expo-sharing\";\nimport axios from 'axios';\nimport * as Crypto from 'expo-crypto';\n\n function App() {\n    //console.log(Camera);\n    const [hasAudioPermission, setHasAudioPermission] = useState(null);\n    const [hasCameraPermission, setHasCameraPermission] =useState(null);\n    const [camera, setCamera] = useState(null);\n    const [record, setRecord] = useState(null);\n    const [type, setType] = useState(Camera.Constants.Type.back);\n    const [loading, setLoading] = useState(false);\n  \n    useEffect(() => {\n        (async () => {\n            const cameraStatus = await Camera.requestPermissionsAsync();\n            setHasCameraPermission(cameraStatus.status === 'granted');\n            const audioStatus = await Camera.requestMicrophonePermissionsAsync();\n                setHasAudioPermission(audioStatus.status === 'granted');\n            })();\n      }, []);\n  const stopVideo = async () => {\n    camera.stopRecording();\n  } \n  const uploadVideo2 = async(uriFile)=>{\n        let dataToLoad = new FormData();\n        dataToLoad.append(\"action\", 'newInsert');\n        dataToLoad.append(\"video\", {type : 'vido/mp4', uri:uriFile, name:'video'});\n        fetch(\"https://megapro.out-app-crm.com/reactnative/data/put/\",{\n            method : 'post',\n            body : dataToLoad\n        }).then(response => response.json())\n        .then(response => {\n            //console.log(response);\n            if(response.status)\n            {\n                setLoading(true);\n                alert(':) '+response.message);\n            }\n            else\n            {\n                setLoading(true);\n                alert('Err '+response.message);\n            }\n\n        }).catch(()=>{\n            alert(\"Err Networking\");\n        });\n  }\n  const uploadVideo = async(uriFile, data) => {\n\n  \n    let dataToLoad = new FormData();\n        dataToLoad.append(\"data\", 'data');\n        dataToLoad.append(\"video\", {type : 'vido/mp4', uri:uriFile, name:'video.mp4'});\n        var config = {\n            onUploadProgress: function(progressEvent) {\n              var percentCompleted = Math.round( (progressEvent.loaded * 100) / progressEvent.total );\n              console.log(percentCompleted, \"%\", progressEvent.total/1000000);\n            }\n          };\n\n          //axios.post(\"http://192.168.1.251/put.php\", dataToLoad, config)\n          axios.post(\"https://megapro.out-app-crm.com/test.php\", dataToLoad, config)\n          //axios.post(\"http://197.230.112.150/test.php\", dataToLoad, config)\n          .then(function (res) {\n              console.log(res);\n              alert(\"OK\")\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n  }\n\n  const takeVideo = async () => {\n    console.log(await camera.getSupportedRatiosAsync()); \n    console.log(await Camera.Constants.VideoQuality['4:3']); \n   // Camera.Constants \n    if(camera){\n        const data = await camera.recordAsync({\n            quality : Camera.Constants.VideoQuality['16:9'],\n            videoBitrate : 1.1*1000*1000,\n            maxDuration : 120,\n            maxFileSize : 20*1000*1000,\n            mute: false\n\n        })\n        setRecord(data.uri);\n        console.log(data.uri);\n        //Sharing.shareAsync(data.uri);\n        //return;\n        //Sharing.shareAsync(data.uri);\n        //console.log('FileSystem:', FileSystem.documentDirectory);\n        //FileSystem.copyAsync(data.uri, FileSystem.documentDirectory+'testado.mp4');\n        // const res = await FileSystem.uploadAsync(\"https://megapro.out-app-crm.com/reactnative/data/put\", data.uri,{\n        //     uploadType: FileSystem.FileSystemUploadType.MULTIPART,\n        //     httpMethod : 'POST',\n        //     fieldName : 'video',\n        //     mimeType : 'video/mp4',\n        //     parameters:{\n        //         \"key\" : 'dfdfdf'\n        //         }\n        // });\n\n        // console.log(res);\n        uploadVideo(data.uri, null);\n        return;\n        //const a = await FileSystem.readAsStringAsync(data.uri);\n        \n        //uploadVideo(data.uri, a);\n        //console.log(a);\n\n\n  }\n}\n  if (!hasAudioPermission || !hasCameraPermission ) {\n    return <View />;\n  }\n  \n    if (!hasAudioPermission || !hasCameraPermission) {\n    return <Text>No access to camera</Text>;\n  }\n  const aa =async() =>  await camera.getAvailableVideoCodecsAsync();\n  return (\n      <SafeAreaView style={{flex: 1,margin: 0}}>\n          <Camera style={{flex:1}}\n                ref={ref => setCamera(ref)}\n                type={type}\n                ratio={'16:9'}\n                zoom={0}\n                quality={Camera.Constants.VideoQuality['4:3']}\n                useCamera2Api={true}\n\n                >\n              <View\n                  style={{\n                      flex: 1,\n                      backgroundColor: 'transparent',\n                      flexDirection: 'row',\n                  }}>\n                  <TouchableOpacity\n                      style={{\n                          //flex: 0.1,\n                          alignSelf: 'flex-end',\n                          alignItems: 'center',\n                      }}\n                      onPress={() => {\n                          setType(\n                              type === Camera.Constants.Type.back\n                                  ? Camera.Constants.Type.front\n                                  : Camera.Constants.Type.back\n                          );\n                      } }>\n                      <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                      style={{\n                          //flex: 0.1,\n                          alignSelf: 'flex-end',\n                          alignItems: 'center',\n                      }}\n                       >\n                  <Button title=\"Take video\" onPress={() =>{  \n                    \n                    //console.log(\"Camera\",camera);\n                  \n                    takeVideo()\n                  } }/>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                      style={{\n                          //flex: 0.1,\n                          alignSelf: 'flex-end',\n                          alignItems: 'center',\n                      }}\n                      >\n                  <Button title=\"Stop Video\"  onPress={() => stopVideo() }/>\n                  </TouchableOpacity>\n              </View>\n          </Camera>\n \n      </SafeAreaView>\n  );\n}\n\n/*\nimport React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport { StatusBar } from 'expo-status-bar';\nimport Layouts from '../utils/Layouts';\nfunction App() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  console.log(Camera.Constants);  \n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n      \n    <View style={{ flex: 1 }}>\n        <StatusBar \n          translucent={false}\n          backgroundColor='black'\n          style=\"light\"\n        />\n      <View style={{ flex: 1,  backgroundColor:'black' }}>\n      <Camera style={{ justifyContent: \"flex-end\",\n          alignItems: \"center\",\n            \n          //flex: 1,\n          //width: 962,\n         // height:1280 ,\n        //   width: 411,\n        //   height:556 ,\n        height: Layouts.window.height,\n        width: Layouts.window.width,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n\n          }} \n              type={type} \n              flashMode={{on:true}} \n              autoFocus='on' \n              //VideoCodec=''\n              VideoQuality='480p'\n              >\n        <View\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            flexDirection: 'row',\n          }}>\n          <TouchableOpacity\n            style={{\n              flex: 0.1,\n              alignSelf: 'flex-end',\n              alignItems: 'center',\n            }}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}>\n            <Text style={{ fontSize: 18, marginBottom: 10, color: 'white' }}> Flip </Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n      </View>  \n    </View>\n  );\n}\n/*\nObject {\n    \"AutoFocus\": Object {\n      \"off\": false,\n      \"on\": true,\n    },\n    \"FlashMode\": Object {\n      \"auto\": 3,\n      \"off\": 0,\n      \"on\": 1,\n      \"torch\": 2,\n    },\n    \"Type\": Object {\n      \"back\": 0,\n      \"front\": 1,\n    },\n    \"VideoCodec\": undefined,\n    \"VideoQuality\": Object {\n      \"1080p\": 1,\n      \"2160p\": 0,\n      \"480p\": 3,\n      \"4:3\": 4,\n      \"720p\": 2,\n    },\n    \"VideoStabilization\": Object {},\n    \"WhiteBalance\": Object {\n      \"auto\": 0,\n      \"cloudy\": 1,\n      \"fluorescent\": 4,\n      \"incandescent\": 5,\n      \"shadow\": 3,\n      \"sunny\": 2,\n    },\n  }\n*/\n  "]},"metadata":{},"sourceType":"module"}